import { int, str } from "../types/_python_types_";
import { bytes32 } from "../types/blockchain_format/sized_bytes";
export declare type KeyValueMarshalled = {
    key: str;
    value: str;
};
export declare type OfferStoreMarshalled = {
    store_id: str;
    inclusions: KeyValueMarshalled[];
};
export declare type StoreProofsMarshalled = {
    store_id: str;
    proofs: ProofMarshalled[];
};
export declare type ProofMarshalled = {
    key: str;
    value: str;
    node_hash: str;
    layers: LayerMarshalled[];
};
export declare type LayerMarshalled = {
    other_hash_side: "left" | "right";
    other_hash: str;
    combined_hash: str;
};
export declare type OfferMarshalled = {
    trade_id: str;
    offer: str;
    taker: OfferStoreMarshalled[];
    maker: StoreProofsMarshalled[];
};
export declare type SyncStatus = {
    root_hash: bytes32;
    generation: int;
    target_root_hash: bytes32;
    target_generation: int;
};
