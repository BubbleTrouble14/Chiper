import { Plot } from "../../chia/harvester/harvester";
import { TDaemon } from "../../../daemon/index";
import { GetMessageType, TConnectionGeneral } from "../../types";
import { float, int, str } from "../../chia/types/_python_types_";
export declare const chia_harvester_service = "chia_harvester";
export declare type chia_harvester_service = typeof chia_harvester_service;
export declare const get_connections_command = "get_connections";
export declare type get_connections_command = typeof get_connections_command;
export declare type TGetConnectionsBroadCast = {
    connections: TConnectionGeneral[];
};
export declare type WsGetConnectionsHarvesterMessage = GetMessageType<chia_harvester_service, get_connections_command, TGetConnectionsBroadCast>;
export declare function on_get_connections(daemon: TDaemon, callback: (e: WsGetConnectionsHarvesterMessage) => unknown): Promise<() => void>;
export declare const get_plots_command = "get_plots";
export declare type get_plots_command = typeof get_plots_command;
export declare type TGetPlotsBroadCast = {
    plots: Plot[];
    failed_to_open_filenames: string[];
    not_found_filenames: string[];
};
export declare type WsGetPlotsMessage = GetMessageType<chia_harvester_service, get_plots_command, TGetPlotsBroadCast>;
export declare function on_get_plots(daemon: TDaemon, callback: (e: WsGetPlotsMessage) => unknown): Promise<() => void>;
export declare const farming_info_command = "farming_info";
export declare type farming_info_command = typeof farming_info_command;
export declare type TFarmingInfoBroadCast = {
    challenge_hash: str;
    total_plots: int;
    found_proofs: int;
    eligible_plots: int;
    time: float;
};
export declare type WsFarmingInfoMessage = GetMessageType<chia_harvester_service, farming_info_command, TFarmingInfoBroadCast>;
export declare function on_farming_info(daemon: TDaemon, callback: (e: GetMessageType<chia_harvester_service, farming_info_command, TFarmingInfoBroadCast>) => unknown): Promise<() => void>;
export declare type WsHarvesterMessage = WsGetConnectionsHarvesterMessage | WsGetPlotsMessage | WsFarmingInfoMessage;
export declare type chia_harvester_commands = get_plots_command | farming_info_command | get_connections_command;
export declare type TChiaHarvesterBroadcast = TGetPlotsBroadCast | TFarmingInfoBroadCast | TGetConnectionsBroadCast;
export declare function on_message_from_harvester(daemon: TDaemon, callback: (e: WsHarvesterMessage) => unknown): Promise<() => void>;
