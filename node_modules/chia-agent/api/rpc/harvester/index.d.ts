import { str } from "../../chia/types/_python_types_";
import { TRPCAgent } from "../../../rpc";
import { Plot } from "../../chia/harvester/harvester";
import { GetMessageType, ResType } from "../../types";
import { TDaemon } from "../../../daemon/index";
export declare const chia_harvester_service = "chia_harvester";
export declare type chia_harvester_service = typeof chia_harvester_service;
export declare const get_plots_command = "get_plots";
export declare type get_plots_command = typeof get_plots_command;
export declare type TGetPlotsRequest = {};
export declare type TGetPlotsResponse = {
    plots: Plot[];
    failed_to_open_filenames: str[];
    not_found_filenames: str[];
};
export declare type WsGetPlotsMessage = GetMessageType<chia_harvester_service, get_plots_command, TGetPlotsResponse>;
export declare function get_plots<T extends TRPCAgent | TDaemon>(agent: T): Promise<import("../../../rpc").ErrorResponse | ResType<T, TGetPlotsResponse, WsGetPlotsMessage>>;
export declare const refresh_plots_command = "refresh_plots";
export declare type refresh_plots_command = typeof refresh_plots_command;
export declare type TRefreshPlotsRequest = {};
export declare type TRefreshPlotsResponse = {};
export declare type WsRefreshPlotsMessage = GetMessageType<chia_harvester_service, refresh_plots_command, TRefreshPlotsResponse>;
export declare function refresh_plots<T extends TRPCAgent | TDaemon>(agent: T): Promise<import("../../../rpc").ErrorResponse | ResType<T, TRefreshPlotsResponse, WsRefreshPlotsMessage>>;
export declare const delete_plot_command = "delete_plot";
export declare type delete_plot_command = typeof delete_plot_command;
export declare type TDeletePlotRequest = {
    filename: str;
};
export declare type TDeletePlotResponse = {};
export declare type WsDeletePlotMessage = GetMessageType<chia_harvester_service, delete_plot_command, TDeletePlotResponse>;
export declare function delete_plot<T extends TRPCAgent | TDaemon>(agent: T, data: TDeletePlotRequest): Promise<import("../../../rpc").ErrorResponse | ResType<T, TDeletePlotResponse, WsDeletePlotMessage>>;
export declare const add_plot_directory_command = "add_plot_directory";
export declare type add_plot_directory_command = typeof add_plot_directory_command;
export declare type TAddPlotDirectoryRequest = {
    dirname: str;
};
export declare type TAddPlotDirectoryResponse = {};
export declare type WsAddPlotDirectoryMessage = GetMessageType<chia_harvester_service, add_plot_directory_command, TAddPlotDirectoryResponse>;
export declare function add_plot_directory<T extends TRPCAgent | TDaemon>(agent: T, data: TAddPlotDirectoryRequest): Promise<import("../../../rpc").ErrorResponse | ResType<T, TAddPlotDirectoryResponse, WsAddPlotDirectoryMessage>>;
export declare const get_plot_directories_command = "get_plot_directories";
export declare type get_plot_directories_command = typeof get_plot_directories_command;
export declare type TGetPlotDirectoriesRequest = {};
export declare type TGetPlotDirectoriesResponse = {
    directories: str[];
};
export declare type WsGetPlotDirectoriesMessage = GetMessageType<chia_harvester_service, get_plot_directories_command, TGetPlotDirectoriesResponse>;
export declare function get_plot_directories<T extends TRPCAgent | TDaemon>(agent: T): Promise<import("../../../rpc").ErrorResponse | ResType<T, TGetPlotDirectoriesResponse, WsGetPlotDirectoriesMessage>>;
export declare const remove_plot_directory_command = "remove_plot_directory";
export declare type remove_plot_directory_command = typeof remove_plot_directory_command;
export declare type TRemovePlotDirectoryRequest = {
    dirname: str;
};
export declare type TRemovePlotDirectoryResponse = {};
export declare type WsRemovePlotDirectoryMessage = GetMessageType<chia_harvester_service, remove_plot_directory_command, TRemovePlotDirectoryResponse>;
export declare function remove_plot_directory<T extends TRPCAgent | TDaemon>(agent: T, data: TRemovePlotDirectoryRequest): Promise<import("../../../rpc").ErrorResponse | ResType<T, TRemovePlotDirectoryResponse, WsRemovePlotDirectoryMessage>>;
export declare type RpcHarvesterMessage = TAddPlotDirectoryResponse | TDeletePlotResponse | TGetPlotDirectoriesResponse | TGetPlotsResponse | TRefreshPlotsResponse | TRemovePlotDirectoryResponse;
export declare type RpcHarvesterMessageOnWs = WsAddPlotDirectoryMessage | WsDeletePlotMessage | WsGetPlotDirectoriesMessage | WsGetPlotsMessage | WsRefreshPlotsMessage | WsRemovePlotDirectoryMessage;
